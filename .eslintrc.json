{
  "env": {
    "browser": true,
    "es6": true
  },
  "extends": [
    "eslint:recommended",
    "plugin:react/recommended",
    "plugin:react-hooks/recommended",
    "plugin:@typescript-eslint/eslint-recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-requiring-type-checking",
    "plugin:import/errors",
    "plugin:import/warnings",
    "plugin:import/typescript",
  ],
  "globals": {
    "Atomics": "readonly",
    "SharedArrayBuffer": "readonly"
  },
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 2019,
    "project": "tsconfig.json",
    "sourceType": "module"
  },
  "settings": {
    "react": {
      "version": "detect"
    },
    "import/resolver": {
      "typescript": {
        "alwaysTryTypes": true,
        "project": "src"
      }
    }
  },
  "plugins": [
    "react",
    "react-hooks",
    "@typescript-eslint",
    "import",
    "unused-imports",
    "boundaries"
  ],
  "rules": {
    "no-restricted-imports": ["error", {
      "patterns": [".*"]
    }],
    "array-bracket-newline": [
      "error",
      "consistent"
    ],
    "array-bracket-spacing": [
      "error",
      "never"
    ],
    "array-element-newline": [
      "error",
      "consistent"
    ],
    "arrow-parens": [
      "error",
      "always"
    ],
    "block-spacing": "error",
    "brace-style": "off",
    "@typescript-eslint/brace-style": "error",
    "comma-dangle": "off",
    "comma-spacing": "off",
    "@typescript-eslint/comma-spacing": "error",
    "comma-style": "error",
    "complexity": [
      "error",
      15
    ],
    "computed-property-spacing": "error",
    "constructor-super": "error",
    "curly": [
      "error",
      "multi-line"
    ],
    "default-case": "error",
    "default-case-last": "error",
    "eol-last": "error",
    "eqeqeq": "error",
    "func-call-spacing": "off",
    "@typescript-eslint/func-call-spacing": "error",
    "generator-star-spacing": [
      "error",
      "after"
    ],
    "guard-for-in": "error",
    "indent": "off",
    "@typescript-eslint/indent": "off",
    "key-spacing": "error",
    "keyword-spacing": "off",
    "@typescript-eslint/keyword-spacing": "error",
    "linebreak-style": "error",
    "max-len": [
      "error",
      {
        "code": 120,
        "ignoreComments": true,
        "ignorePattern": "^(import|export|http)?( ).+"
      }
    ],
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "semi",
          "requireLast": true
        },
        "singleline": {
          "delimiter": "semi",
          "requireLast": false
        }
      }
    ],
    "new-cap": [
      "error",
      {
        "newIsCap": true,
        "capIsNew": false
      }
    ],
    "new-parens": "error",
    "no-array-constructor": "off",
    "@typescript-eslint/no-array-constructor": "error",
    "no-bitwise": "error",
    "no-caller": "error",
    "no-console": [
      "warn",
      {
        "allow": [
          "warn",
          "error"
        ]
      }
    ],
    "no-debugger": "off",
    "no-duplicate-imports": "off",
    "no-eval": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-irregular-whitespace": "error",
    "no-lonely-if": "error",
    "no-magic-numbers": "off",
    "@typescript-eslint/no-magic-numbers": [
      "warn",
      {
        "ignoreNumericLiteralTypes": true,
        "ignoreEnums": true,
        "ignoreReadonlyClassProperties": true,
        "ignore": [
          -1,
          0,
          1
        ]
      }
    ],
    "no-mixed-spaces-and-tabs": "error",
    "no-multi-spaces": "error",
    "no-multi-str": "error",
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 2
      }
    ],
    "no-new-object": "error",
    "no-new-wrappers": "error",
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-return-assign": "error",
    "no-shadow": "off",
    "@typescript-eslint/no-shadow": [
      "error"
    ],
    "no-tabs": "error",
    "no-throw-literal": "off",
    "@typescript-eslint/no-throw-literal": "error",
    "no-trailing-spaces": "error",
    "no-unexpected-multiline": "error",
    "no-unreachable": "error",
    "@typescript-eslint/no-unused-vars": [
      "error",
      { "argsIgnorePattern": "^_", "varsIgnorePattern": "^_" }
    ],
    "no-useless-rename": "error",
    "no-var": "error",
    "no-whitespace-before-property": "error",
    "no-with": "error",
    "object-curly-spacing": "off",
    "@typescript-eslint/object-curly-spacing": [
      "error",
      "always"
    ],
    "one-var": [
      "error",
      "never"
    ],
    "padded-blocks": [
      "error",
      "never"
    ],
    "prefer-const": [
      "error",
      {
        "destructuring": "all"
      }
    ],
    "prefer-object-spread": "error",
    "prefer-promise-reject-errors": "error",
    "prefer-rest-params": "error",
    "prefer-spread": "error",
    "quotes": "off",
    "@typescript-eslint/quotes": [
      "error",
      "single",
      {
        "allowTemplateLiterals": true
      }
    ],
    "react/display-name": "off",
    "react/jsx-curly-brace-presence": [
      "warn",
      {
        "props": "never",
        "children": "ignore"
      }
    ],
    "rest-spread-spacing": "error",
    "semi": "off",
    "@typescript-eslint/semi": "error",
    "semi-spacing": "error",
    "space-before-blocks": "error",
    "space-before-function-paren": "off",
    "@typescript-eslint/space-before-function-paren": [
      "error",
      {
        "asyncArrow": "always",
        "anonymous": "never",
        "named": "never"
      }
    ],
    "space-infix-ops": "error",
    "space-unary-ops": "error",
    "spaced-comment": [
      "error",
      "always"
    ],
    "switch-colon-spacing": "error",
    "yield-star-spacing": [
      "error",
      "after"
    ],
    "@typescript-eslint/array-type": [
      "error",
      {
        "default": "generic"
      }
    ],
    "@typescript-eslint/ban-ts-comment": "off",
    "@typescript-eslint/comma-dangle": "off",
    "@typescript-eslint/member-ordering": [
      "warn",
      {
        "default": [
          "field",
          "constructor",
          "method"
        ]
      }
    ],
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "interface",
        "format": [
          "PascalCase"
        ],
        "custom": {
          "regex": "^I[A-Z]",
          "match": true
        }
      }
    ],
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/no-floating-promises": "error",
    "@typescript-eslint/no-inferrable-types": "off",
    "@typescript-eslint/explicit-function-return-type": [
      "error",
      {
        "allowExpressions": true
      }
    ],
    "@typescript-eslint/explicit-module-boundary-types": "off",
    // Покрывается explicit-function-return-type
    "@typescript-eslint/unbound-method": "off",
    "@typescript-eslint/no-unsafe-enum-comparison": "off",
    "@typescript-eslint/prefer-as-const": "off",
    "@typescript-eslint/no-unsafe-assignment": "error",
    "@typescript-eslint/ban-types": [
      "error",
      {
        "types": {
          "object": false
        },
        "extendDefaults": true
      }
    ],
    "@typescript-eslint/typedef": [
      "error",
      {
        // Разрешил в стрелках не писать типы для вывода типов в билдере редьюсеров
        "arrowParameter": false,
        // Отключил, потому что ругается на стрелочные функции в классах
        "memberVariableDeclaration": false
      }
    ],
    "no-empty-function": "off",
    "@typescript-eslint/no-empty-function": [
      "error",
      {
        "allow": [
          "private-constructors"
        ]
      }
    ],
    "import/default": "off",
    "import/no-unresolved": "off",
    "import/order": [
      "error",
      {
        "groups": [
          [
            "internal",
            "external"
          ],
          "sibling"
        ],
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "import/no-default-export": "error",
    "import/no-self-import": "error",
    "react/jsx-uses-react": "off",
    "react/prop-types": "off",
    "react/react-in-jsx-scope": "off"
  }
}
